// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Js_exn = require("bs-platform/lib/js/js_exn.js");
var Express = require("bs-express/src/Express.js");
var Process = require("process");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Layout$ReasonSsr = require("./Layout.bs.js");
var Server = require("react-dom/server");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");
var FetchData$ReasonSsr = require("./FetchData.bs.js");

var app = Express.App[/* make */17](/* () */0);

function renderHTML(_next, _req, res) {
  var content = Server.renderToString(ReasonReact.element(undefined, undefined, FetchData$ReasonSsr.make(/* array */[])));
  return Express.Response[/* sendString */2](Layout$ReasonSsr.make(content, "Server Rendering", /* () */0), res);
}

Express.App[/* useOnPath */2](app, "/assets", Express.Static[/* asMiddleware */13](Express.Static[/* make */12]("assets/", Express.Static[/* defaultOptions */0](/* () */0))));

Express.App[/* useOnPath */2](app, "/", Express.Middleware[/* from */5](renderHTML));

function onListen(e) {
  var exit = 0;
  var val;
  try {
    val = e;
    exit = 1;
  }
  catch (raw_exn){
    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
    if (exn[0] === Js_exn.$$Error) {
      console.log(exn[1]);
      Process.exit(1);
      return /* () */0;
    } else {
      throw exn;
    }
  }
  if (exit === 1) {
    console.log("listening at localhost:" + String(3000));
    return /* () */0;
  }
  
}

Express.App[/* listen */21](app, 3000, onListen, /* () */0);

var port = 3000;

exports.app = app;
exports.renderHTML = renderHTML;
exports.port = port;
exports.onListen = onListen;
/* app Not a pure module */
