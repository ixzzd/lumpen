// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var App$ReasonSsr = require("./App.bs.js");

function decodeModelImage(json) {
  return /* record */[
          /* normal */Json_decode.field("normal", Json_decode.string, json),
          /* og */Json_decode.field("og", Json_decode.string, json)
        ];
}

function decodeModel(json) {
  return /* record */[
          /* id */Json_decode.field("id", Json_decode.$$int, json),
          /* name */Json_decode.field("name", Json_decode.string, json),
          /* city */Json_decode.field("city", Json_decode.string, json),
          /* avatar */Json_decode.field("avatar", decodeModelImage, json)
        ];
}

function decodeCity(json) {
  return /* record */[
          /* id */Json_decode.field("id", Json_decode.$$int, json),
          /* name */Json_decode.field("name", Json_decode.string, json)
        ];
}

function decodeData(json) {
  return /* record */[
          /* models */Json_decode.field("models", (function (param) {
                  return Json_decode.list(decodeModel, param);
                }), json),
          /* cities */Json_decode.field("cities", (function (param) {
                  return Json_decode.list(decodeCity, param);
                }), json)
        ];
}

var Decode = /* module */[
  /* decodeModelImage */decodeModelImage,
  /* decodeModel */decodeModel,
  /* decodeCity */decodeCity,
  /* decodeData */decodeData
];

function fetchData(param) {
  return fetch("http://api.lumpen.agency/data.json").then((function (prim) {
                    return prim.json();
                  })).then((function (json) {
                  var decodedData = decodeData(json);
                  return Promise.resolve(decodedData);
                })).catch((function (_err) {
                console.log(_err);
                return Promise.resolve(undefined);
              }));
}

var component = ReasonReact.reducerComponent("DataFetcher");

function make(_children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              return Curry._1(self[/* send */3], /* LoadData */0);
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = self[/* state */1];
              if (typeof match === "number") {
                if (match !== 0) {
                  return React.createElement("div", undefined, "Something went wrong!");
                } else {
                  return React.createElement("div", undefined, "Loading...");
                }
              } else {
                var data = match[0];
                return ReasonReact.element(undefined, undefined, App$ReasonSsr.make(data[/* models */0], data[/* cities */1], /* array */[]));
              }
            }),
          /* initialState */(function (param) {
              return /* Loading */0;
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, _state) {
              if (typeof action === "number") {
                if (action !== 0) {
                  return /* Update */Block.__(0, [/* Failure */1]);
                } else {
                  return /* UpdateWithSideEffects */Block.__(2, [
                            /* Loading */0,
                            (function (self) {
                                fetchData(/* () */0).then((function (result) {
                                        if (result !== undefined) {
                                          return Promise.resolve(Curry._1(self[/* send */3], /* DataLoaded */[result]));
                                        } else {
                                          return Promise.resolve(Curry._1(self[/* send */3], /* LoadDataFailed */1));
                                        }
                                      }));
                                return /* () */0;
                              })
                          ]);
                }
              } else {
                return /* Update */Block.__(0, [/* Success */[action[0]]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.Decode = Decode;
exports.fetchData = fetchData;
exports.component = component;
exports.make = make;
/* component Not a pure module */
